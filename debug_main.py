#!/usr/bin/env python3
"""
Script de depuraci√≥n para main.py
"""

import traceback
import sys

try:
    print("üîç Iniciando depuraci√≥n de main.py...")
    
    # Verificar importaciones
    print("1. Verificando importaciones...")
    import tkinter as tk
    print("   ‚úÖ tkinter importado")
    
    from tkinter import ttk, filedialog, messagebox, scrolledtext, simpledialog
    print("   ‚úÖ componentes de tkinter importados")
    
    import os
    print("   ‚úÖ os importado")
    
    from robot_lexical_analyzer import RobotLexicalAnalyzer
    print("   ‚úÖ RobotLexicalAnalyzer importado")
    
    # Verificar GUI
    print("2. Creando interfaz gr√°fica...")
    from main import LexicalAnalyzerGUI
    print("   ‚úÖ LexicalAnalyzerGUI importado")
    
    app = LexicalAnalyzerGUI()
    print("   ‚úÖ GUI creada")
    
    # Verificar funciones cr√≠ticas
    print("3. Verificando funciones...")
    if hasattr(app.analyzer, 'generate_assembly_code'):
        print("   ‚úÖ generate_assembly_code disponible")
    else:
        print("   ‚ùå generate_assembly_code NO disponible")
    
    if hasattr(app.analyzer, 'generate_and_compile'):
        print("   ‚úÖ generate_and_compile disponible")
    else:
        print("   ‚ùå generate_and_compile NO disponible")
    
    # Probar ejecutar GUI
    print("4. Iniciando GUI...")
    print("   Si la ventana no aparece, puede ser un problema de display en SSH/terminal")
    print("   En Ubuntu, aseg√∫rate de tener DISPLAY configurado o ejecutar desde GUI")
    
    # Solo ejecutar si tenemos display
    if 'DISPLAY' in os.environ:
        print("   ‚úÖ DISPLAY detectado, ejecutando GUI...")
        app.run()
    else:
        print("   ‚ö†Ô∏è No hay DISPLAY, GUI no se puede ejecutar desde terminal SSH")
        print("   Ejecuta desde el entorno gr√°fico de Ubuntu")

except Exception as e:
    print(f"‚ùå Error: {e}")
    print("üìã Traceback completo:")
    traceback.print_exc()
